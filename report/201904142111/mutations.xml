<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>addCoupon</mutatedMethod><methodDescription>(Lsrc/coupon/Coupon;)Z</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>8</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWithAmountCouponOverMinPurchaseAmountWhenAddCouponCalledThenItShouldReturnFalse(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>addCoupon</mutatedMethod><methodDescription>(Lsrc/coupon/Coupon;)Z</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>9</block><killingTest>ShoppingCartTest.givenShoppingCartWithAmountCouponUnderMinPurchaseAmountWhenAddCouponCalledThenItShouldReturnTrue(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>addCoupon</mutatedMethod><methodDescription>(Lsrc/coupon/Coupon;)Z</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>10</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWithAmountCouponOverMinPurchaseAmountWhenAddCouponCalledThenItShouldReturnFalse(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>addProduct</mutatedMethod><methodDescription>(ILsrc/Product;)I</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>1</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWhenAddProductCalledWithInvalidQuantityThenItShouldThrowInvalidArgumentException(ShoppingCartTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>addProduct</mutatedMethod><methodDescription>(ILsrc/Product;)I</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>7</block><killingTest>ShoppingCartTest.givenShoppingCartWith1ProductWhenAddProductCalledWithSameProductAndQuantity1ThenAddProductReturns2(ShoppingCartTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>addProduct</mutatedMethod><methodDescription>(ILsrc/Product;)I</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest>ShoppingCartTest.givenShoppingCartWhenGetDeliveryCostCalledThenItShouldReturnDeliveryCost(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>addProduct</mutatedMethod><methodDescription>(ILsrc/Product;)I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>3</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWhenAddProductCalledWithNullProductThenItShouldThrowInvalidArgumentException(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>addProduct</mutatedMethod><methodDescription>(ILsrc/Product;)I</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>5</block><killingTest>ShoppingCartTest.givenShoppingCartWhenGetDeliveryCostCalledThenItShouldReturnDeliveryCost(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>addProduct</mutatedMethod><methodDescription>(ILsrc/Product;)I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>75</index><block>7</block><killingTest>ShoppingCartTest.givenShoppingCartWith1ProductWhenAddProductCalledWithSameProductAndQuantity1ThenAddProductReturns2(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>findAllCategories</mutatedMethod><methodDescription>()Ljava/util/Set;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>13</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWithAmountCouponOverMinPurchaseAmountWhenAddCouponCalledThenItShouldReturnFalse(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/ShoppingCart::findAllCategories to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>findProducts</mutatedMethod><methodDescription>(Lsrc/Category;)Ljava/util/List;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>14</block><killingTest>ShoppingCartTest.givenProductsForDifferentCategoriesWithoutAnyDiscountsWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/ShoppingCart::findProducts to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getCampaignDiscount</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>20</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getCampaignDiscount</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>83</index><block>22</block><killingTest>ShoppingCartTest.givenProductsForDifferentCategoriesWithoutAnyDiscountsWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/ShoppingCart::getCampaignDiscount</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getCampaignsAsText</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>45</block><killingTest>ShoppingCartTest.givenShoppingCartWithOneForEachProductCampaignAndCouponWhenPrintCalledThenReturnShoppingCartOutput(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getCampaignsAsText</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>113</index><block>49</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWhenPrintCalledThenReturnEmptyShoppingCartOutput(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/ShoppingCart::getCampaignsAsText to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getCampaignsAsText</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>44</block><killingTest>ShoppingCartTest.givenShoppingCartWhenToStringCalledItReturnsShoppingCartOutput(ShoppingCartTest)</killingTest><description>removed call to java/util/List::sort</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getCategories</mutatedMethod><methodDescription>()Ljava/util/Set;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>28</block><killingTest>ShoppingCartTest.givenShoppingCartWhenGetDeliveryCostCalledThenItShouldReturnDeliveryCost(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/ShoppingCart::getCategories to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getCouponDiscount</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>23</block><killingTest>ShoppingCartTest.givenProductsForDifferentCategoriesWithoutAnyDiscountsWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/ShoppingCart::getCouponDiscount</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getCouponsAsText</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>52</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWhenPrintCalledThenReturnEmptyShoppingCartOutput(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/ShoppingCart::getCouponsAsText to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getDeliveryCost</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>31</block><killingTest>ShoppingCartTest.givenShoppingCartWhenGetDeliveryCostCalledThenItShouldReturnDeliveryCost(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/ShoppingCart::getDeliveryCost</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getNumberOfDeliveries</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>29</block><killingTest>ShoppingCartTest.givenShoppingCartWhenGetDeliveryCostCalledThenItShouldReturnDeliveryCost(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getNumberOfProducts</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>30</block><killingTest>ShoppingCartTest.givenShoppingCartWhenGetDeliveryCostCalledThenItShouldReturnDeliveryCost(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getProductsAsText</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>41</block><killingTest>ShoppingCartTest.givenShoppingCartWhenToStringCalledItReturnsShoppingCartOutput(ShoppingCartTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getProductsAsText</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>125</index><block>43</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWhenPrintCalledThenReturnEmptyShoppingCartOutput(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/ShoppingCart::getProductsAsText to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getProductsAsText</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>39</block><killingTest>ShoppingCartTest.givenShoppingCartWhenToStringCalledItReturnsShoppingCartOutput(ShoppingCartTest)</killingTest><description>removed call to java/util/List::sort</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getTotalAmount</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>16</block><killingTest>ShoppingCartTest.givenProductsForDifferentCategoriesWithoutAnyDiscountsWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getTotalAmount</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>16</block><killingTest>ShoppingCartTest.givenProductsForDifferentCategoriesWithoutAnyDiscountsWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getTotalAmount</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>17</block><killingTest>ShoppingCartTest.givenProductsForDifferentCategoriesWithoutAnyDiscountsWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/ShoppingCart::getTotalAmount</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getTotalAmountAfterCampaignDiscount</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>24</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getTotalAmountAfterCampaignDiscount</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>24</block><killingTest>ShoppingCartTest.givenProductsForDifferentCategoriesWithoutAnyDiscountsWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/ShoppingCart::getTotalAmountAfterCampaignDiscount</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getTotalAmountAfterDiscounts</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>25</block><killingTest>ShoppingCartTest.givenShoppingCartWithProductAndAmountCouponWhenGetTotalAmountAfterDiscountsCalledThenItShouldReturnTotalAmountWithDiscount(ShoppingCartTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>getTotalAmountAfterDiscounts</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>25</block><killingTest>ShoppingCartTest.givenProductsForDifferentCategoriesWithoutAnyDiscountsWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/ShoppingCart::getTotalAmountAfterDiscounts</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>lambda$findProducts$0</mutatedMethod><methodDescription>(Lsrc/Category;Lsrc/Product;)Z</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>57</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>lambda$getCampaignDiscount$1</mutatedMethod><methodDescription>(Lsrc/Product;)I</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>56</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>lambda$getCampaignDiscount$2</mutatedMethod><methodDescription>(Lsrc/Product;)D</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>55</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>lambda$getCampaignDiscount$2</mutatedMethod><methodDescription>(Lsrc/Product;)D</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>55</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/ShoppingCart::lambda$getCampaignDiscount$2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>lambda$getCampaignsAsText$4</mutatedMethod><methodDescription>(Lsrc/Product;)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>53</block><killingTest>ShoppingCartTest.givenShoppingCartWithOneForEachProductCampaignAndCouponWhenPrintCalledThenReturnShoppingCartOutput(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>lambda$getCouponDiscount$3</mutatedMethod><methodDescription>(Lsrc/coupon/Coupon;)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>54</block><killingTest>ShoppingCartTest.givenShoppingCartWithProductAndAmountCouponWhenGetTotalAmountAfterDiscountsCalledThenItShouldReturnTotalAmountWithDiscount(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/ShoppingCart::lambda$getCouponDiscount$3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>32</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWhenPrintCalledThenReturnEmptyShoppingCartOutput(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>34</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWhenPrintCalledThenReturnEmptyShoppingCartOutput(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>36</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWhenPrintCalledThenReturnEmptyShoppingCartOutput(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ShoppingCart.java</sourceFile><mutatedClass>src.ShoppingCart</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>104</index><block>38</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWhenPrintCalledThenReturnEmptyShoppingCartOutput(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/ShoppingCart::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>addCampaign</mutatedMethod><methodDescription>(Lsrc/campaign/Campaign;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>2</block><killingTest>ShoppingCartTest.givenRateCampaignWhenAddCampaignCalledThenItReturnsTrue(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>addCampaign</mutatedMethod><methodDescription>(Lsrc/campaign/Campaign;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>3</block><killingTest>ShoppingCartTest.givenRateCampaignWhenAddCampaignCalledThenItReturnsTrue(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>addCampaign</mutatedMethod><methodDescription>(Lsrc/campaign/Campaign;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>5</block><killingTest>ShoppingCartTest.givenRateCampaignWhenAddCampaignCalledThenItReturnsTrue(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Lsrc/Category;)I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>18</block><killingTest>ShoppingCartTest.givenShoppingCartWhenToStringCalledItReturnsShoppingCartOutput(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>getAllParents</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>12</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>getAllParents</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>14</block><killingTest>ShoppingCartTest.givenProductsForDifferentCategoriesWithoutAnyDiscountsWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/Category::getAllParents to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>getAppliedCampaigns</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>6</block><killingTest>ShoppingCartTest.givenProductsForDifferentCategoriesWithoutAnyDiscountsWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/Category::getAppliedCampaigns to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>inCategory</mutatedMethod><methodDescription>(Lsrc/Category;)Z</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>7</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>inCategory</mutatedMethod><methodDescription>(Lsrc/Category;)Z</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>8</block><killingTest>ShoppingCartTest.givenProductsForDifferentCategoriesWithoutAnyDiscountsWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>inCategory</mutatedMethod><methodDescription>(Lsrc/Category;)Z</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>9</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>inCategory</mutatedMethod><methodDescription>(Lsrc/Category;)Z</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>11</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>lambda$getAppliedCampaigns$0</mutatedMethod><methodDescription>(ILsrc/campaign/Campaign;)Z</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>19</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToSubcategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithoutDiscountApplied(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>15</block><killingTest>ShoppingCartTest.givenShoppingCartWithOneForEachProductCampaignAndCouponWhenPrintCalledThenReturnShoppingCartOutput(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Category.java</sourceFile><mutatedClass>src.Category</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>17</block><killingTest>ShoppingCartTest.givenShoppingCartWithOneForEachProductCampaignAndCouponWhenPrintCalledThenReturnShoppingCartOutput(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/Category::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RateCampaign.java</sourceFile><mutatedClass>src.campaign.RateCampaign</mutatedClass><mutatedMethod>getDiscount</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>4</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RateCampaign.java</sourceFile><mutatedClass>src.campaign.RateCampaign</mutatedClass><mutatedMethod>getDiscount</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>4</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RateCampaign.java</sourceFile><mutatedClass>src.campaign.RateCampaign</mutatedClass><mutatedMethod>getDiscount</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>4</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/campaign/RateCampaign::getDiscount</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>RateCampaign.java</sourceFile><mutatedClass>src.campaign.RateCampaign</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>1</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToParentCategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RateCampaign.java</sourceFile><mutatedClass>src.campaign.RateCampaign</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToSubcategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithoutDiscountApplied(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RateCampaign.java</sourceFile><mutatedClass>src.campaign.RateCampaign</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>3</block><killingTest>ShoppingCartTest.givenProductsForSubcategoriesWithRateCampaignAppliedToSubcategoryWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithoutDiscountApplied(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RateCampaign.java</sourceFile><mutatedClass>src.campaign.RateCampaign</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>5</block><killingTest>ShoppingCartTest.givenRateCampaignWhenToStringCalledThenReturnRateCampaign(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/campaign/RateCampaign::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RateCoupon.java</sourceFile><mutatedClass>src.coupon.RateCoupon</mutatedClass><mutatedMethod>getDiscount</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>4</block><killingTest>ShoppingCartTest.givenShoppingCartWithProductAndRateCouponWhenGetTotalAmountAfterDiscountsCalledThenItShouldReturnTotalAmountWithDiscount(ShoppingCartTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RateCoupon.java</sourceFile><mutatedClass>src.coupon.RateCoupon</mutatedClass><mutatedMethod>getDiscount</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>4</block><killingTest>ShoppingCartTest.givenShoppingCartWithProductAndRateCouponWhenGetTotalAmountAfterDiscountsCalledThenItShouldReturnTotalAmountWithDiscount(ShoppingCartTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RateCoupon.java</sourceFile><mutatedClass>src.coupon.RateCoupon</mutatedClass><mutatedMethod>getDiscount</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>4</block><killingTest>ShoppingCartTest.givenShoppingCartWithProductAndRateCouponWhenGetTotalAmountAfterDiscountsCalledThenItShouldReturnTotalAmountWithDiscount(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/coupon/RateCoupon::getDiscount</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RateCoupon.java</sourceFile><mutatedClass>src.coupon.RateCoupon</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>1</block><killingTest>ShoppingCartTest.givenShoppingCartWithProductAndRateCouponWhenGetTotalAmountAfterDiscountsCalledThenItShouldReturnTotalAmountWithDiscount(ShoppingCartTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RateCoupon.java</sourceFile><mutatedClass>src.coupon.RateCoupon</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>ShoppingCartTest.givenShoppingCartWithProductAndRateCouponWhenGetTotalAmountAfterDiscountsCalledThenItShouldReturnTotalAmountWithDiscount(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RateCoupon.java</sourceFile><mutatedClass>src.coupon.RateCoupon</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>3</block><killingTest>ShoppingCartTest.givenShoppingCartWithProductAndRateCouponWhenGetTotalAmountAfterDiscountsCalledThenItShouldReturnTotalAmountWithDiscount(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RateCoupon.java</sourceFile><mutatedClass>src.coupon.RateCoupon</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>5</block><killingTest>ShoppingCartTest.givenRateCouponWhenToStringCalledThenReturnRateCoupon(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/coupon/RateCoupon::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AmountCampaign.java</sourceFile><mutatedClass>src.campaign.AmountCampaign</mutatedClass><mutatedMethod>getDiscount</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTest>ShoppingCartTest.givenShoppingCartWithProductsAndDiscountsWhenGetTotalAmountAfterDiscountsCalledThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/campaign/AmountCampaign::getDiscount</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AmountCampaign.java</sourceFile><mutatedClass>src.campaign.AmountCampaign</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>1</block><killingTest>ShoppingCartTest.givenAmountCampaignWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmountWithDiscountApplied(ShoppingCartTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AmountCampaign.java</sourceFile><mutatedClass>src.campaign.AmountCampaign</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>ShoppingCartTest.givenShoppingCartWithProductsAndDiscountsWhenGetTotalAmountAfterDiscountsCalledThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AmountCampaign.java</sourceFile><mutatedClass>src.campaign.AmountCampaign</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>3</block><killingTest>ShoppingCartTest.givenShoppingCartWithProductsAndDiscountsWhenGetTotalAmountAfterDiscountsCalledThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AmountCampaign.java</sourceFile><mutatedClass>src.campaign.AmountCampaign</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>5</block><killingTest>ShoppingCartTest.givenAmountCampaignWhenToStringCalledThenReturnAmountCampaign(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/campaign/AmountCampaign::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AmountCoupon.java</sourceFile><mutatedClass>src.coupon.AmountCoupon</mutatedClass><mutatedMethod>getDiscount</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTest>ShoppingCartTest.givenShoppingCartWithProductAndAmountCouponWhenGetTotalAmountAfterDiscountsCalledThenItShouldReturnTotalAmountWithDiscount(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/coupon/AmountCoupon::getDiscount</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AmountCoupon.java</sourceFile><mutatedClass>src.coupon.AmountCoupon</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>1</block><killingTest>ShoppingCartTest.givenShoppingCartWithProductAndAmountCouponWhenGetTotalAmountAfterDiscountsCalledThenItShouldReturnTotalAmountWithDiscount(ShoppingCartTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AmountCoupon.java</sourceFile><mutatedClass>src.coupon.AmountCoupon</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWithAmountCouponOverMinPurchaseAmountWhenAddCouponCalledThenItShouldReturnFalse(ShoppingCartTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AmountCoupon.java</sourceFile><mutatedClass>src.coupon.AmountCoupon</mutatedClass><mutatedMethod>isApplicable</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>3</block><killingTest>ShoppingCartTest.givenEmptyShoppingCartWithAmountCouponOverMinPurchaseAmountWhenAddCouponCalledThenItShouldReturnFalse(ShoppingCartTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AmountCoupon.java</sourceFile><mutatedClass>src.coupon.AmountCoupon</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>5</block><killingTest>ShoppingCartTest.givenAmountCouponWhenToStringCalledThenReturnAmountCoupon(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/coupon/AmountCoupon::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FixedDeliveryCostCalculator.java</sourceFile><mutatedClass>src.delivery.FixedDeliveryCostCalculator</mutatedClass><mutatedMethod>calculateFor</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>ShoppingCartTest.givenShoppingCartWhenGetDeliveryCostCalledThenItShouldReturnDeliveryCost(ShoppingCartTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FixedDeliveryCostCalculator.java</sourceFile><mutatedClass>src.delivery.FixedDeliveryCostCalculator</mutatedClass><mutatedMethod>calculateFor</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest>ShoppingCartTest.givenShoppingCartWhenGetDeliveryCostCalledThenItShouldReturnDeliveryCost(ShoppingCartTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FixedDeliveryCostCalculator.java</sourceFile><mutatedClass>src.delivery.FixedDeliveryCostCalculator</mutatedClass><mutatedMethod>calculateFor</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest>ShoppingCartTest.givenShoppingCartWhenGetDeliveryCostCalledThenItShouldReturnDeliveryCost(ShoppingCartTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FixedDeliveryCostCalculator.java</sourceFile><mutatedClass>src.delivery.FixedDeliveryCostCalculator</mutatedClass><mutatedMethod>calculateFor</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>1</block><killingTest>ShoppingCartTest.givenShoppingCartWhenGetDeliveryCostCalledThenItShouldReturnDeliveryCost(ShoppingCartTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FixedDeliveryCostCalculator.java</sourceFile><mutatedClass>src.delivery.FixedDeliveryCostCalculator</mutatedClass><mutatedMethod>calculateFor</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>1</block><killingTest>ShoppingCartTest.givenShoppingCartWhenGetDeliveryCostCalledThenItShouldReturnDeliveryCost(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/delivery/FixedDeliveryCostCalculator::calculateFor</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Product.java</sourceFile><mutatedClass>src.Product</mutatedClass><mutatedMethod>getCategory</mutatedMethod><methodDescription>()Lsrc/Category;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>ShoppingCartTest.givenShoppingCartWhenGetDeliveryCostCalledThenItShouldReturnDeliveryCost(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/Product::getCategory to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Product.java</sourceFile><mutatedClass>src.Product</mutatedClass><mutatedMethod>getPrice</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>ShoppingCartTest.givenProductsForDifferentCategoriesWithoutAnyDiscountsWhenGetTotalAmountAfterDiscountsCalledOnShoppingCartThenItShouldReturnTotalAmount(ShoppingCartTest)</killingTest><description>replaced return of double value with -(x + 1) for src/Product::getPrice</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Product.java</sourceFile><mutatedClass>src.Product</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>3</block><killingTest>ShoppingCartTest.givenProductWhenToStringCalledThenReturnProduct(ShoppingCartTest)</killingTest><description>mutated return of Object value for src/Product::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
</mutations>
